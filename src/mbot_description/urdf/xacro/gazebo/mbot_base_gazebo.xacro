<?xml version="1.0"?>
<robot name="mbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- PROPERTY LIST -->
    <xacro:property name="M_PI" value="3.1415926"/>
    <xacro:property name="base_mass"   value="19.44064455" />
    <xacro:property name="wheel_mass"   value="0.478515278465427" />
    <xacro:property name="caster_mass"   value="0.205283816888508" />
    <xacro:property name="wheel_joint_x" value="0"/>
    <xacro:property name="wheel_joint_y" value="0.228000000000002"/>
    <xacro:property name="wheel_radius" value="0.075"/>                                                                                            !!
    <xacro:property name="caster_radius" value="0.0508"/>




    <!-- Defining the colors used in this robot -->
    <material name="yellow">
        <color rgba="1 0.4 0 1"/>
    </material>
    <material name="black">
        <color rgba="0 0 0 0.95"/>
    </material>
    <material name="gray">
        <color rgba="0.75 0.75 0.75 1"/>
    </material>


    <!-- Macro for base_link inertia matrix -->
    <xacro:macro name="base_link_inertial_matrix" params="m">
        <inertial>
            <mass value="${m}" />
            <inertia
              ixx="3.40354705"
              ixy="-0.00036197"
              ixz="0.332666732"
              iyy="3.40038142"
              iyz="0.00198404"
              izz="1.03448983" />
          </inertial>
    </xacro:macro>

    <!-- Macro for wheel inertia matrix -->
    <xacro:macro name="wheel_inertial_matrix" params="m">
        <inertial>
            <mass value="${m}" />
            <inertia
              ixx="0.000919887702981847"
              ixy="0"
              ixz="0"
              iyy="0.00172218757582685"
              iyz="0"
              izz="0.000919917345428581" />
          </inertial>
    </xacro:macro>

    <xacro:macro name="caster_inertial_matrix" params="m">
        <inertial>
            <mass value="${m}" />
            <inertia
              ixx="0.000153304057154647"
              ixy="0"
              ixz="0"
              iyy="0.000280614230922824"
              iyz="0"
              izz="0.000153304057154647" />
          </inertial>
    </xacro:macro>


    <!-- Macro for robot wheel -->
    <xacro:macro name="wheel" params="prefix  reflect">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <origin xyz="0 ${reflect*wheel_joint_y} 0" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_wheel_link"/>
            <axis xyz="0 1 0"/>
        </joint>
        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                <mesh
                  filename="package://mbot_description/meshes/wheel.STL" />
                </geometry>
                <material name="gray" />
            </visual>
            <collision>
              <origin
                xyz="0 0 0"
                rpy="0 0 0" />
              <geometry>
                <mesh
                  filename="package://mbot_description/meshes/wheel.STL" />
              </geometry>
            </collision>
            <wheel_inertial_matrix  m="${wheel_mass}" />
        </link>

        <gazebo reference="${prefix}_wheel_link">
            <material>Gazebo/Gray</material>
            <kd>1.0</kd>
            <mu1>0.8</mu1>
            <mu2>0.8</mu2>
            <maxVel>0.0</maxVel>
            <minDepth>0.001</minDepth>
        </gazebo>

        <!-- Transmission is important to link the joints and the controller -->
        <transmission name="${prefix}_wheel_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${prefix}_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${prefix}_wheel_joint_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <!-- Macro for robot caster -->
    <xacro:macro name="caster" params="">
        <joint name="caster_joint" type="continuous">
          <origin
            xyz="0.205419999998498 0 -0.0256900277222159"
            rpy="0 0 0" />
            <parent link="base_link"/>
            <child link="caster_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="caster_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                <mesh
                  filename="package://mbot_description/meshes/link_caster.STL" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                <mesh
                  filename="package://mbot_description/meshes/link_caster.STL" />
                </geometry>
            </collision>
            <wheel_inertial_matrix  m="${caster_mass}" />
        </link>


        <gazebo reference="caster_link">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>

    <xacro:macro name="mbot_base_gazebo">
        <link name="base_footprint">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
            </visual>
        </link>
        <gazebo reference="base_footprint">
            <turnGravityOff>false</turnGravityOff>
        </gazebo>

        <joint name="base_footprint" type="fixed">
            <origin xyz="0 0 ${-wheel_radius}" rpy="0 0 0" />
              <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>


        <link name="base_link">
            <visual>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                  <mesh
                    filename="package://mbot_description/meshes/base_link.STL" />
                </geometry>
                <material name="gray" />
            </visual>
          <collision>
                <origin xyz=" 0 0 0" rpy="0 0 0" />
                <geometry>
                   <mesh
                    filename="package://mbot_description/meshes/base_link.STL" />
                </geometry>
           </collision>
          <base_link_inertial_matrix  m="${base_mass}" />
        </link>

        <gazebo reference="base_link">
            <material>Gazebo/Blue</material>
        </gazebo>

        <wheel prefix="left"  reflect="1"/>
        <wheel prefix="right" reflect="-1"/>
        <caster />

        <!-- controller -->
        <gazebo>
            <plugin name="differential_drive_controller"
                    filename="libgazebo_ros_diff_drive.so">
                <rosDebugLevel>Debug</rosDebugLevel>
                <publishWheelTF>true</publishWheelTF>
                <robotNamespace>/</robotNamespace>
                <publishTf>1</publishTf>
                <publishWheelJointState>true</publishWheelJointState>
                <alwaysOn>true</alwaysOn>
                <updateRate>20.0</updateRate>
                <legacyMode>true</legacyMode>
                <leftJoint>left_wheel_joint</leftJoint>
                <rightJoint>right_wheel_joint</rightJoint>
                <wheelSeparation>${wheel_joint_y*2}</wheelSeparation>
                <wheelDiameter>${2*wheel_radius}</wheelDiameter>
                <broadcastTF>1</broadcastTF>
                <wheelTorque>30</wheelTorque>
                <wheelAcceleration>1.8</wheelAcceleration>
                <commandTopic>cmd_vel</commandTopic>
                <odometryFrame>odom</odometryFrame>
                <odometryTopic>odom</odometryTopic>
                <robotBaseFrame>base_footprint</robotBaseFrame>
            </plugin>
        </gazebo>
    </xacro:macro>

</robot>
